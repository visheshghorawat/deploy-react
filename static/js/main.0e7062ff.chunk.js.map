{"version":3,"sources":["DP.jpeg","components/Social.js","contents/Home.js","contents/About.js","contents/Contact.js","components/NavItem.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Social","class","href","size","Component","Home","className","src","profilepic","alt","height","width","effect","radius","text","speed","eraseDelay","About","Contact","Navitem","id","this","props","item","to","tolink","onClick","activec","bind","Navbar","activeitem","x","state","NavItemActive","length","document","getElementById","classList","remove","setState","add","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,iC,8OCe5BC,E,uKAXf,OACA,yBAAKC,MAAM,UACX,uBAAGC,KAAK,sCAAsC,kBAAC,IAAD,CAAgBC,KAAM,MACpE,uBAAGD,KAAK,yCAAyC,kBAAC,IAAD,CAAmBC,KAAM,MAC1E,uBAAGD,KAAK,6CAA6C,kBAAC,IAAD,CAAkBC,KAAM,MAC7E,uBAAGD,KAAK,sDAAsD,kBAAC,IAAD,CAAYC,KAAM,W,GAP3DC,aCcNC,E,uKAVf,OACA,yBAAKC,UAAU,eACf,yBAAKC,IAAKC,IAAYF,UAAU,aAAaG,IAAI,kDAAkDC,OAAO,MAAMC,MAAM,MAAMC,OAAO,QAAQC,OAAO,OAElJ,kBAAC,IAAD,CAAmBP,UAAU,eAAeQ,KAAM,CAAC,2BAA2B,wBAAyBC,MAAO,IAAKC,WAAY,MAC/H,kBAAC,EAAD,W,GAPmBZ,aCcJa,E,uKAff,OACA,yBAAKX,UAAU,UACf,wBAAIA,UAAU,YAAd,YACA,0CACA,oDACA,8CAAmB,wCAAnB,oCACA,6BACA,4gB,GAToBF,aCaLc,E,uKAVf,OACA,yBAAKZ,UAAU,UACf,wBAAIA,UAAU,YAAd,cACA,kEACA,gEACA,kBAAC,EAAD,W,GAPsBF,a,eCaPe,E,uKATf,OACQ,wBAAIC,GAAIC,KAAKC,MAAMC,MAC3B,kBAAC,IAAD,CAAMC,GAAIH,KAAKC,MAAMG,OAAQC,QAASL,KAAKC,MAAMK,QAAQC,KAAKP,KAAKA,KAAKC,MAAMC,OAAQF,KAAKC,MAAMC,W,GAJ3EnB,aC6BHyB,E,kDA7Bf,WAAYP,GACX,IAAD,8BACI,cAAMA,IAKVQ,WAAW,SAACC,GAEL,EAAKC,MAAMC,cAAcC,OAAO,GAC/BC,SAASC,eAAe,EAAKJ,MAAMC,eAAeI,UAAUC,OAAO,UAEvE,EAAKC,SAAS,CAAC,cAAgBR,IAAG,WAC9BI,SAASC,eAAe,EAAKJ,MAAMC,eAAeI,UAAUG,IAAI,cAVpE,EAAKR,MAAM,CACP,cAAgB,IAHxB,E,qDAgBI,OACI,6BACA,4BACA,kBAAC,EAAD,CAAST,KAAK,OAAOE,OAAO,IAAKE,QAASN,KAAKS,aAC/C,kBAAC,EAAD,CAASP,KAAK,QAAQE,OAAO,SAAUE,QAASN,KAAKS,aACrD,kBAAC,EAAD,CAASP,KAAK,UAAUE,OAAO,WAAYE,QAASN,KAAKS,mB,GAvBhD1B,aC8BNqC,MArBf,WACA,OACA,kBAAC,IAAD,KACA,yBAAKnC,UAAU,OACf,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,KAClB,kBAAC,EAAD,OAGA,kBAAC,IAAD,CAAOA,KAAK,UACZ,kBAAC,EAAD,OAGA,kBAAC,IAAD,CAAOA,KAAK,YACZ,kBAAC,EAAD,UCfoBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhB,SAASC,eAAe,SDwHpB,kBAAmBgB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0e7062ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DP.ded112ad.jpeg\";","import React, { Component } from 'react';\r\nimport {FaLinkedin ,FaFacebookSquare,FaInstagramSquare,FaGithubSquare } from \"react-icons/fa\";\r\nclass Social extends Component {\r\nrender() {\r\nreturn (\r\n<div class=\"social\">\r\n<a href=\"https://github.com/visheshghorawat\" ><FaGithubSquare size={30}/></a>\r\n<a href=\"https://Instagram.com/visheshghorawat\" ><FaInstagramSquare size={30}/></a>\r\n<a href=\"https://www.facebook.com/vishesh.ghorawat\" ><FaFacebookSquare size={30}/></a>\r\n<a href=\"https://Linkedin.com/in/vishesh-ghorawat-a0382b1b1\" ><FaLinkedin size={30}/></a>\r\n\r\n</div>\r\n)\r\n}\r\n}\r\nexport default Social\r\n","import React, { Component } from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\nimport profilepic from 'C:/Users/Vishesh Ghorawat/first-app/src/DP.jpeg';\r\nimport Social from '../components/Social';\r\nclass Home extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv home\">\r\n<img src={profilepic} className=\"profilepic\" alt='C:/Users/Vishesh Ghorawat/first-app/src/DP.jpeg' height=\"300\" width=\"250\" effect=\"sepia\" radius=\"20\">\r\n</img>\r\n<ReactTypingEffect className=\"typingeffect\" text={['Hi I am Vishesh Ghorawat','I am a web developer']} speed={100} eraseDelay={700}/>\r\n<Social/>\r\n</div>\r\n)\r\n}\r\n}\r\nexport default Home","import React, { Component } from 'react';\r\nclass About extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv\">\r\n<h1 className=\"subtopic\">About Me</h1>\r\n<h4>Hey there,</h4>\r\n<h1>I'm Vishesh Ghorawat</h1>\r\n<h3>Full Stack Web <u>Developer</u> and App-Dev, open CV Enthusiast</h3>\r\n<br></br>\r\n<p>I started my journey in the world of computers from a young age,\r\nnow Iâ€™m 18 years old, Pursuing my EEE degree from MIT,Manipal.  Web development is my center of interest, i have always\r\nloved the idea of cross-platform development and am also learning flutter and react-native very extensively these days. I want to start a project on open CV in the next few days and am looking for people with similar interests. You can reach out to me by clicking on the contact option in the menu.\r\n</p>\r\n</div>\r\n)\r\n}\r\n}\r\nexport default About","import React, { Component } from 'react';\r\nimport Social from '../components/Social.js';\r\nclass Contact extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv\">\r\n<h1 className=\"subtopic\">Contact Me</h1>\r\n<h3>Email  :   visheshgcodes@gmail.com</h3>\r\n<h3>Instagram   :   @visheshghorawat</h3>\r\n<Social />\r\n</div>\r\n)\r\n}\r\n}\r\nexport default Contact","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Navitem extends Component {\r\nrender() {\r\nreturn (\r\n        <li id={this.props.item}>\r\n<Link to={this.props.tolink} onClick={this.props.activec.bind(this,this.props.item)}>{this.props.item}</Link>\r\n</li>\r\n    \r\n\r\n)\r\n}\r\n}\r\nexport default Navitem","import React, { Component } from 'react';\r\nimport Navitem from './NavItem';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            'NavItemActive':''\r\n        }\r\n    }\r\n    activeitem=(x)=>\r\n    {\r\n        if(this.state.NavItemActive.length>0){\r\n            document.getElementById(this.state.NavItemActive).classList.remove('active');\r\n        }\r\n        this.setState({'NavItemActive':x},()=>{\r\n            document.getElementById(this.state.NavItemActive).classList.add('active');\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <nav>\r\n            <ul>\r\n            <Navitem item=\"Home\" tolink=\"/\"  activec={this.activeitem}></Navitem>\r\n            <Navitem item=\"About\" tolink=\"/about\"  activec={this.activeitem}></Navitem>\r\n            <Navitem item=\"Contact\" tolink=\"/contact\"  activec={this.activeitem}></Navitem>\r\n            </ul>\r\n            </nav>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Navbar","import React from 'react';\nimport './App.css';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Contact from './contents/Contact';\n\nimport\n{\nBrowserRouter as Router,\nRoute,\n} from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nfunction App() {\nreturn (\n<Router>\n<div className=\"App\">\n<Navbar />\n{/* Route for Home.js contents */}\n<Route exact path=\"/\">\n<Home />\n</Route>\n{/* Route for About.js contents */}\n<Route path=\"/about\">\n<About />\n</Route>\n{/* Route for Contact.js contents */}\n<Route path=\"/contact\">\n<Contact />\n</Route>\n</div>\n</Router>\n)\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}